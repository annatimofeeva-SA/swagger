openapi: 3.0.0
info:
  title: Bank API
  description: API для управления банковскими счетами и пользователями
  version: 1.0.0
  contact:
    name: Bank API Support
    url: https://www.bank.com/support
    email: support@bank.com
servers:
  - url: https://webinarOpenSchool.org/api/v1
tags:
  - name: Счета
  - name: Пользователи
  
paths:  
  /accounts/{accountId}:
    get:
      tags:
        - Счета
      summary: Получить информацию о банковском счете
      description: Возвращает информацию о конкретном банковском счете
      parameters:
        - name: accountId
          in: path
          required: true
          description: Уникальный идентификатор счета
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountId:
                    type: integer
                    description: Уникальный идентификатор счета
                    example: 70203333
                  accountNumber:
                    type: string
                    description: Уникальный идентификатор счета
                    example: "40781000208102500000"
                  balance:
                    type: number
                    format: double
                    description: Текущий баланс счета
                    example: 471230.77
                  status:
                    type: string
                    description: Статус счета 
                    example: "ACTIVE"
                    enum:
                     - ACTIVE
                     - CLOSED
                     - RESERVED
        '400':
          description: Некорректный запрос
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Данные не найдены
        '500':
          description: Сервер не доступен
  
  /accounts:
    post:
      tags:
        - Счета
      summary: Создать новый счет
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccount'
      responses:
        '201':
          description: Создано
        '400':
          description: Некорректный запрос
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен
        '409':
          description: Конфликт
        '500':
          description: Сервер не доступен
          
  /users/{userId}:
    put:
      tags:
        - Пользователи
      summary: Обновить информацию о пользователе
      parameters:
        - name: userId
          in: path
          description: Уникальное значение ID пользователя
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
            example:
              name: "Alice Smith"
              email: "alice@example.com"
              age: 30
      responses:
        '200':
          description: Успешный запрос
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Данные не найдены
        '500':
          description: Сервер не доступен
          
    patch:
      tags:
        - Пользователи
      summary: Изменить email пользователя
      parameters:
        - name: userId
          in: path
          description: Уникальное значение ID пользователя
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Новый email пользователя
              required:
                - email
      responses:
        '200':
          description: email пользователя обновлен
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Пользователь не найден
        '500':
          description: Сервер не доступен

          
    delete:
      tags:
        - Пользователи
      summary: Удалить пользователя
      parameters:
        - name: userId
          in: path
          description: Уникальное значение ID пользователя
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Пользователь удален
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Пользователь не найден
        '500':
          description: Сервер не доступен
          
    get:
      tags:
        - Пользователи
      summary: Получить информацию о пользователе
      description: Возвращает информацию о пользователе
      parameters:
        - name: userId
          in: path
          description: Уникальное значение ID пользователя
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен
        '404':
          description: Данные не найдены
        '500':
          description: Сервер не доступен 
          
components:
  schemas:
    NewAccount:
      type: object
      properties:
        accountType:
          type: string
          description: Тип счета
          example: "DEBET"
        balance:
          type: number
          description: Первоначальный баланс
          example: 10000
        firstName:
          type: string
          description: Фамилия владельца
          example: "Свиридова"
        middleName:
          type: string
          description: Отчество владельца
          example: "Борисовна"
        lastName:
          type: string
          description: Имя владельца
          example: "Елена"
      required:
        - accountType
        - firstName
        - lastName
    UserUpdate:
      type: object
      properties:
        name:
          type: string
          description: Имя и фамилия пользователя
        email:
          type: string
          description: Адрес электронной почты
        age:
          type: integer
          description: Возраст

